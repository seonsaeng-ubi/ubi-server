# Generated by Django 4.0.3 on 2022-06-17 12:05

import api.user.models
import api.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='휴대폰')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '유저',
                'verbose_name_plural': '유저',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', api.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='이메일')),
                ('code', models.CharField(max_length=6, verbose_name='인증번호')),
                ('token', models.CharField(max_length=40, verbose_name='토큰')),
                ('created', models.DateTimeField(verbose_name='생성일시')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneVerifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11, verbose_name='휴대폰번호')),
                ('code', models.CharField(max_length=6, verbose_name='인증번호')),
                ('token', models.CharField(max_length=40, verbose_name='토큰')),
                ('created', models.DateTimeField(verbose_name='생성일시')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=32, null=True, verbose_name='닉네임')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=api.utils.FilenameChanger('profile'), verbose_name='프로필 사진')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='생성 일자')),
                ('kind', models.CharField(blank=True, max_length=32, null=True, verbose_name='종류')),
                ('code', models.CharField(blank=True, max_length=1024, null=True, verbose_name='SNS 고유 코드')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='포인트')),
                ('firebase_token', models.CharField(blank=True, max_length=1024, null=True, verbose_name='파이어베이스 토큰')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '프로필',
                'verbose_name_plural': '프로필',
            },
        ),
    ]
